{"ast":null,"code":"var _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nconst IsAuthenticated = () => {\n  _s();\n  const [authenticated, setAuthenticated] = useState(false);\n  const [loading, setLoading] = useState(true);\n  const [username, setUsername] = useState('');\n  useEffect(() => {\n    axios.get('http://localhost:4000/auth/check-auth', {\n      withCredentials: true\n    }).then(response => {\n      if (response.data.authenticated) {\n        setAuthenticated(true);\n        setUsername(response.data.username);\n      }\n      setLoading(false);\n    }).catch(error => {\n      console.error('Error checking authentication:', error);\n      setLoading(false);\n    });\n  }, []);\n  return {\n    authenticated,\n    loading,\n    username\n  };\n};\n_s(IsAuthenticated, \"9jxbrzfbv1q0CPOt1juCM5s0zP0=\");\n_c = IsAuthenticated;\nexport default IsAuthenticated;\nvar _c;\n$RefreshReg$(_c, \"IsAuthenticated\");","map":{"version":3,"names":["React","useEffect","useState","axios","IsAuthenticated","_s","authenticated","setAuthenticated","loading","setLoading","username","setUsername","get","withCredentials","then","response","data","catch","error","console","_c","$RefreshReg$"],"sources":["C:/Users/Natarajan/Desktop/attendance/client/src/functions/IsAuthenticated.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport axios from 'axios';\r\n\r\nconst IsAuthenticated = () => {\r\n  const [authenticated, setAuthenticated] = useState(false);\r\n  const [loading, setLoading] = useState(true);\r\n  const [username, setUsername] = useState('');\r\n\r\n  useEffect(() => {\r\n    axios\r\n      .get('http://localhost:4000/auth/check-auth', {\r\n        withCredentials: true,\r\n      })\r\n      .then((response) => {\r\n        if (response.data.authenticated) {\r\n          setAuthenticated(true);\r\n          setUsername(response.data.username);\r\n        }\r\n        setLoading(false);\r\n      })\r\n      .catch((error) => {\r\n        console.error('Error checking authentication:', error);\r\n        setLoading(false);\r\n      });\r\n  }, []);\r\n\r\n  return { authenticated, loading, username };\r\n};\r\n\r\nexport default IsAuthenticated;\r\n"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO;AAEzB,MAAMC,eAAe,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC5B,MAAM,CAACC,aAAa,EAAEC,gBAAgB,CAAC,GAAGL,QAAQ,CAAC,KAAK,CAAC;EACzD,MAAM,CAACM,OAAO,EAAEC,UAAU,CAAC,GAAGP,QAAQ,CAAC,IAAI,CAAC;EAC5C,MAAM,CAACQ,QAAQ,EAAEC,WAAW,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAE5CD,SAAS,CAAC,MAAM;IACdE,KAAK,CACFS,GAAG,CAAC,uCAAuC,EAAE;MAC5CC,eAAe,EAAE;IACnB,CAAC,CAAC,CACDC,IAAI,CAAEC,QAAQ,IAAK;MAClB,IAAIA,QAAQ,CAACC,IAAI,CAACV,aAAa,EAAE;QAC/BC,gBAAgB,CAAC,IAAI,CAAC;QACtBI,WAAW,CAACI,QAAQ,CAACC,IAAI,CAACN,QAAQ,CAAC;MACrC;MACAD,UAAU,CAAC,KAAK,CAAC;IACnB,CAAC,CAAC,CACDQ,KAAK,CAAEC,KAAK,IAAK;MAChBC,OAAO,CAACD,KAAK,CAAC,gCAAgC,EAAEA,KAAK,CAAC;MACtDT,UAAU,CAAC,KAAK,CAAC;IACnB,CAAC,CAAC;EACN,CAAC,EAAE,EAAE,CAAC;EAEN,OAAO;IAAEH,aAAa;IAAEE,OAAO;IAAEE;EAAS,CAAC;AAC7C,CAAC;AAACL,EAAA,CAxBID,eAAe;AAAAgB,EAAA,GAAfhB,eAAe;AA0BrB,eAAeA,eAAe;AAAC,IAAAgB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}